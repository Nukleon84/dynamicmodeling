<SyntaxDefinition name="Modelica"
        xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
  <Color name="Comment" foreground="Green" />
  <Color name="String" foreground="DarkOrange" />

 
  <!-- This is the main ruleset. -->
  <RuleSet>
    <Span color="Comment" begin="//" />
    <Span color="Comment" multiline="true"
       begin="/\*" end="\*/" />

    <Span color="String" >
      <Begin>"</Begin>
      <End>"</End>
      <RuleSet>
        <!-- nested span for escape sequences -->
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>

    
    

    <Keywords fontWeight="bold" foreground="Blue">
      <Word>if</Word>
      <Word>else</Word>
      <Word>then</Word>
      
      <Word>model</Word>
      <Word>package</Word>
      <Word>class</Word>
      <Word>function</Word>
      <Word>connector</Word>

      <Word>for</Word>
      <Word>in</Word>
      <Word>loop</Word>
      <Word>end</Word>


      <Word>objective</Word>
      <Word>optimize</Word>
      <Word>bound</Word>
      <Word>uncertain</Word>
      
    </Keywords>

    <Keywords fontWeight="bold" foreground="SteelBlue">
      <Word>connect</Word>
    </Keywords>
    
    <Keywords fontWeight="bold" foreground="Red">
      <Word>Real</Word>
      <Word>Integer</Word>
      <Word>String</Word>
      <Word>External Object</Word>   

    </Keywords>

    <Keywords fontWeight="bold" foreground="Brown">
      <Word>constant</Word>
      <Word>parameter</Word>
      <Word>uncertain</Word>
      <Word>minimize</Word>
      <Word>each</Word>
      <Word>constraints</Word>

      <Word>input</Word>
      <Word>output</Word>

      <Word>inner</Word>
      <Word>outer</Word>
      
      <Word>extends</Word>
      <Word>import</Word>
    </Keywords>
    
    <Keywords fontWeight="bold" foreground="Gray">
      <Word>equation</Word>
      <Word>algorithm</Word>
      <Word>optimization</Word>
  
    </Keywords>
    
    <!-- Digits -->
    <Rule foreground="DarkBlue">
      \b0[xX][0-9a-fA-F]+  # hex number
      |    \b
      (    \d+(\.[0-9]+)?   #number with optional floating point
      |    \.[0-9]+         #or just starting with floating point
      )
      ([eE][+-]?[0-9]+)? # optional exponent
    </Rule>
  </RuleSet>
</SyntaxDefinition>
